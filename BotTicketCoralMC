const {
    ActionRowBuilder,
    ButtonBuilder,
    ButtonStyle,
    ChannelType,
    Colors,
    PermissionFlagsBits
} = require('discord.js');
const transcript = require('discord-html-transcripts');
const config = require('../../config.json');

module.exports = {
    name: 'interactionCreate',
    once: false,
    execute: async (interaction, client) => {
        if (!interaction.isButton()) return;

        const row = new ActionRowBuilder()
            .addComponents(
                new ButtonBuilder().setCustomId('close').setLabel(' • Chiudi').setEmoji('🗑').setStyle(ButtonStyle.Danger),
                new ButtonBuilder().setCustomId('transcript').setLabel(' • Transcript').setEmoji('📁').setStyle(ButtonStyle.Primary)
            )


        let category = config.parent;
        let roleStaff = interaction.guild.roles.cache.get(config.roleStaffId);
        let LogChannel = config.logChannel;

        let AlreadyAChannel = interaction.guild.channels.cache.find(c => c.topic == interaction.user.id);
        if (AlreadyAChannel) return interaction.rely({
            content: ":x: | Hai già un Ticket aperto in questo server!",
            ephemeral: true
        });

        if (interaction.customId === "close") {
            let channel = interaction.channel;
            channel.delete()


        } else if (interaction.customId === "transcript") {
            interaction.reply({
                embeds: [{
                    description: `📁 • Trascrizione eseguita correttamente ✅ `,
                    footer: {
                        text: "Version 1.0 BETA"
                    },
                    color: Colors.Yellow
                }]
            })

            client.channels.cache.get(config.logChannel).send({
                embeds: [{
                    description: `📁 • Transcript di ${interaction.channel}`,
                    footer: {
                        text: "Version 1.0 BETA"
                    },
                    color: Colors.Yellow
                }],
                files: [await transcript.createTranscript(interaction.channel)]
            })
        } else if (interaction.customId === "supporto") {
            interaction.guild.channels.create({
                name: `supporto ${interaction.user.username}`,
                type: ChannelType.GuildText,
                parent: config.parent,
                permissionOverwrites: [{
                        id: interaction.user.id,
                        allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.SendMessages],
                        deny: [PermissionFlagsBits.MentionEveryone]
                    },
                    {
                        id: interaction.guild.id,
                        deny: [PermissionFlagsBits.ViewChannel]
                    },
                    {
                        id: roleStaff,
                        allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.SendMessages],
                        deny: [PermissionFlagsBits.MentionEveryone]
                    }
                ]
            }).then((c) => {
                c.send({
                    content: `${interaction.user}`,
                    embeds: [{
                        title: "Supporto",
                        description: "Salve, nel mentre attendi che un membro dello Staff Team ti risponda\n esponi il tuo problema!",
                        footer: {
                            text: "Version 1.0 BETA",
                        },
                        color: Colors.Yellow
                    }],
                    components: [
                        row
                    ]
                })
                interaction.reply({
                    content: `✅ Il tuo Ticket è stato aperto correttamente. <#${c.id}>`,
                    ephemeral: true
                })
            })

        } else if (interaction.customId === "candidatura") {
            interaction.guild.channels.create({
                name: `candidatura ${interaction.user.username}`,
                type: ChannelType.GuildText,
                parent: config.parent,
                permissionOverwrites: [{
                        id: interaction.user.id,
                        allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.SendMessages],
                        deny: [PermissionFlagsBits.MentionEveryone]
                    },
                    {
                        id: interaction.guild.id,
                        deny: [PermissionFlagsBits.ViewChannel]
                    },
                    {
                        id: roleStaff,
                        allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.SendMessages],
                        deny: [PermissionFlagsBits.MentionEveryone]
                    }
                ]
            }).then((c) => {
                c.send({
                    content: `||${interaction.user}||`,
                    embeds: [{
                        title: "Candidatura",
                        description: "Salve, mentre attendi un **Provinator** scrivi il ruolo per cui vuoi candidarti",
                        footer: {
                            text: "Version 1.0 BETA",
                        },
                        color: Colors.Yellow
                    }],
                    components: [
                        row
                    ]
                })
                interaction.reply({
                    content: `✅ Il tuo Ticket è stato aperto correttamente: <#${c.id}>`,
                    ephemeral: true
                })
            })
        } else if (interaction.customId === "report") {
            interaction.guild.channels.create({
                name: `report ${interaction.user.username}`,
                type: ChannelType.GuildText,
                parent: config.parent,
                permissionOverwrites: [{
                        id: interaction.user.id,
                        allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.SendMessages],
                        deny: [PermissionFlagsBits.MentionEveryone]
                    },
                    {
                        id: interaction.guild.id,
                        deny: [PermissionFlagsBits.ViewChannel]
                    },
                    {
                        id: roleStaff,
                        allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.SendMessages],
                        deny: [PermissionFlagsBits.MentionEveryone]
                    }
                ]
            }).then((c) => {
                c.send({
                    content: `||${interaction.user}||`,
                    embeds: [{
                        title: "REPORT",
                        description: "Salve, nel mentre attendi un membro dello **Staff Team** descrivi il tuo Report",
                        footer: {
                            text: "Version 1.0 BETA",
                        },
                        color: Colors.Yellow
                    }],
                    components: [
                        row
                    ]
                })
                interaction.reply({
                    content: `✅ il tuo Ticket è stato aperto correttamente: <#${c.id}>`,
                    ephemeral: true
                })
            })

                } else if (interaction.customId === "partnership") {
                    interaction.guild.channels.create({
                        name: `partnership ${interaction.user.username}`,
                        type: ChannelType.GuildText,
                        parent: config.parent,
                        permissionOverwrites: [{
                                id: interaction.user.id,
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.SendMessages],
                                deny: [PermissionFlagsBits.MentionEveryone]
                            },
                            {
                                id: interaction.guild.id,
                                deny: [PermissionFlagsBits.ViewChannel]
                            },
                            {
                                id: roleStaff,
                                allow: [PermissionFlagsBits.ViewChannel, PermissionFlagsBits.ReadMessageHistory, PermissionFlagsBits.SendMessages],
                                deny: [PermissionFlagsBits.MentionEveryone]
                            }
                        ]
                    }).then((c) => {
                        c.send({
                            content: `||${interaction.user}||`,
                            embeds: [{
                                title: "PARTNERSHIP",
                                description: "Salve, nel mentre attendi un **Gestore Partnership** invia la descrizione del/dei tuo/tuoi **Server**",
                                footer: {
                                    text: "Version 1.0 BETA",
                                },
                                color: Colors.Yellow
                            }],
                            components: [
                                row
                            ]
                        })
                        interaction.reply({
                            content: `✅ il tuo Ticket è stato aperto correttamente: <#${c.id}>`,
                            ephemeral: true
                })
            })
        }
    }
}
